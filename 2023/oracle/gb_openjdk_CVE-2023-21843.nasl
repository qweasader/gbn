# SPDX-FileCopyrightText: 2023 Greenbone AG
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-only

CPE = "cpe:/a:oracle:openjdk";

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.149182");
  script_version("2023-10-20T05:06:03+0000");
  script_tag(name:"last_modification", value:"2023-10-20 05:06:03 +0000 (Fri, 20 Oct 2023)");
  script_tag(name:"creation_date", value:"2023-01-20 02:59:27 +0000 (Fri, 20 Jan 2023)");
  script_tag(name:"cvss_base", value:"2.6");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:H/Au:N/C:N/I:P/A:N");
  script_tag(name:"severity_vector", value:"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N");
  script_tag(name:"severity_origin", value:"NVD");
  script_tag(name:"severity_date", value:"2023-01-18 00:15:00 +0000 (Wed, 18 Jan 2023)");

  script_cve_id("CVE-2023-21843");

  script_tag(name:"qod_type", value:"executable_version_unreliable");

  script_tag(name:"solution_type", value:"VendorFix");

  script_name("Oracle OpenJDK Vulnerability (CVE-2023-21843)");

  script_category(ACT_GATHER_INFO);

  script_copyright("Copyright (C) 2023 Greenbone AG");
  script_family("General");
  script_dependencies("secpod_openjdk_detect.nasl");
  script_mandatory_keys("openjdk/detected");

  script_tag(name:"summary", value:"Oracle OpenJDK is prone to a vulnerability in the sound
  component.");

  script_tag(name:"vuldetect", value:"Checks if a vulnerable version is present on the target host.");

  script_tag(name:"insight", value:"Difficult to exploit vulnerability allows unauthenticated
  attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM
  Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update,
  insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible
  data.

  Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java
  Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code
  that comes from the internet) and rely on the Java sandbox for security. This vulnerability does
  not apply to Java deployments, typically in servers, that load and run only trusted code (e.g.,
  code installed by an administrator).");

  script_tag(name:"affected", value:"Oracle OpenJDK versions 7, 8, 11, 13, 15, 17 and 19.

  Note: The vendor is only evaluating the affected status of supported versions but EOL versions
  like 9, 12 or 16 in between the affected versions are also assumed to be affected.");

  script_tag(name:"solution", value:"See the referenced vendor advisory for a solution.");

  script_xref(name:"URL", value:"https://openjdk.org/groups/vulnerability/advisories/2023-01-17");
  script_xref(name:"URL", value:"https://mail.openjdk.org/pipermail/vuln-announce/2023-January/000018.html");

  exit(0);
}

include("version_func.inc");
include("host_details.inc");

if (isnull(port = get_app_port(cpe: CPE)))
  exit(0);

if (!infos = get_app_version_and_location(cpe: CPE, port: port, exit_no_version: TRUE))
  exit(0);

version = infos["version"];
location = infos["location"];

if (version_in_range(version: version, test_version: "1.7.0", test_version2: "1.7.0.361")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "1.7.0.371 (7u371)", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

if (version_in_range(version: version, test_version: "1.8.0", test_version2: "1.8.0.352")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "1.8.0.362 (8u362)", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

if (version_in_range(version: version, test_version: "9.0", test_version2: "11.0.17")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "11.0.18", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

if (version_in_range(version: version, test_version: "12.0", test_version2: "13.0.13")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "13.0.14", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

if (version_in_range(version: version, test_version: "14.0", test_version2: "15.0.9")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "15.0.10", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

if (version_in_range(version: version, test_version: "16.0", test_version2: "17.0.5")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "17.0.6", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

if (version_in_range(version: version, test_version: "18.0", test_version2: "19.0.1")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "19.0.2", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

exit(99);
