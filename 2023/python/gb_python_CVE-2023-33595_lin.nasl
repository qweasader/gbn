# SPDX-FileCopyrightText: 2023 Greenbone AG
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-only

CPE = "cpe:/a:python:python";

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.104792");
  script_version("2023-11-17T16:10:13+0000");
  script_tag(name:"last_modification", value:"2023-11-17 16:10:13 +0000 (Fri, 17 Nov 2023)");
  script_tag(name:"creation_date", value:"2023-06-12 11:24:04 +0000 (Mon, 12 Jun 2023)");
  script_tag(name:"cvss_base", value:"4.9");
  script_tag(name:"cvss_base_vector", value:"AV:L/AC:L/Au:N/C:N/I:N/A:C");
  script_tag(name:"severity_vector", value:"CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H");
  script_tag(name:"severity_origin", value:"NVD");
  script_tag(name:"severity_date", value:"2023-06-15 14:58:00 +0000 (Thu, 15 Jun 2023)");

  script_cve_id("CVE-2023-33595");

  # nb: Only pre-releases of 3.12.0 seems to be affected
  script_tag(name:"qod_type", value:"remote_banner_unreliable");

  script_tag(name:"solution_type", value:"VendorFix");

  script_name("Python 3.12.0 Pre-Releases Multiple UAF Vulnerabilities - Linux");

  script_category(ACT_GATHER_INFO);

  script_copyright("Copyright (C) 2023 Greenbone AG");
  script_family("General");
  script_dependencies("gb_python_consolidation.nasl", "os_detection.nasl");
  script_mandatory_keys("python/detected", "Host/runs_unixoide");

  script_tag(name:"summary", value:"Python is prone to multiple use-after-free (UAF)
  vulnerabilities.");

  script_tag(name:"vuldetect", value:"Checks if a vulnerable version is present on the target host.");

  script_tag(name:"insight", value:"The AddressSanitizer (ASAN) tool has detected multiple
  heap-use-after-free errors and a segmentation fault (SEGV) in the Python interpreter. The
  heap-use-after-free errors occurred in the ascii_decode and unicode_decode_utf8 functions in the
  unicodeobject.c file, and the SEGV occurred in the tok_backup function in the tokenizer.c file.
  Additionally, a memory leak was detected in the pystate.c file.");

  script_tag(name:"affected", value:"Python 3.12.0 pre-releases (e.g. alpha 7) starting from Git
  commit 1ef61cf71a218c71860ff6aecf0fd51edb8b65dc and prior to d5a97074d24cd14cb2a35a2b1ad3074863cde264.");

  script_tag(name:"solution", value:"Update to the final release of version 3.12.0 or later.");

  script_xref(name:"URL", value:"https://github.com/psf/advisory-database/blob/main/advisories/python/PSF-2023-3.json");
  script_xref(name:"URL", value:"https://osv.dev/list?ecosystem=&q=CVE-2023-33595");
  script_xref(name:"URL", value:"https://github.com/python/cpython/issues/103824");
  script_xref(name:"URL", value:"https://github.com/python/cpython/issues/103824#issuecomment-1633960225");
  script_xref(name:"URL", value:"https://github.com/python/cpython/pull/103993");
  script_xref(name:"URL", value:"https://github.com/python/cpython/commit/d5a97074d24cd14cb2a35a2b1ad3074863cde264");

  exit(0);
}

include("host_details.inc");
include("version_func.inc");

if (isnull(port = get_app_port(cpe: CPE)))
  exit(0);

if (!infos = get_app_version_and_location(cpe: CPE, port: port, exit_no_version: TRUE, version_regex:"^[0-9]+\.[0-9]+\.[0-9]+"))
  exit(0);

version = infos["version"];
location = infos["location"];

# nb: No detection of pre-releases available so we're just checking / reporting all 3.12.0 versions
# but using a low QoD above.
if (version =~ "^3\.12\.0") {
  report = report_fixed_ver(installed_version: version, fixed_version: "3.12.0 final", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

exit(99);
