# Copyright (C) 2021 Greenbone Networks GmbH
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-or-later
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

CPE = "cpe:/a:samba:samba";

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.117760");
  script_version("2024-01-03T05:05:19+0000");
  script_tag(name:"last_modification", value:"2024-01-03 05:05:19 +0000 (Wed, 03 Jan 2024)");
  script_tag(name:"creation_date", value:"2021-10-28 13:39:01 +0000 (Thu, 28 Oct 2021)");
  script_tag(name:"cvss_base", value:"9.0");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:S/C:C/I:C/A:C");
  script_tag(name:"severity_vector", value:"CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H");
  script_tag(name:"severity_origin", value:"NVD");
  script_tag(name:"severity_date", value:"2023-12-31 19:15:00 +0000 (Sun, 31 Dec 2023)");

  script_cve_id("CVE-2020-17049");

  script_tag(name:"qod_type", value:"remote_banner_unreliable");

  script_tag(name:"solution_type", value:"VendorFix");

  script_name("Samba Security Feature Bypass Vulnerability (CVE-2020-17049)");

  script_category(ACT_GATHER_INFO);

  script_copyright("Copyright (C) 2021 Greenbone Networks GmbH");
  script_family("General");
  script_dependencies("smb_nativelanman.nasl", "gb_samba_detect.nasl");
  script_mandatory_keys("samba/smb_or_ssh/detected");

  script_tag(name:"summary", value:"Samba is prone to a security feature bypass vulnerability.");

  script_tag(name:"vuldetect", value:"Checks if a vulnerable version is present on the target host.");

  script_tag(name:"insight", value:"BUG 14642: Provide a fix for MS CVE-2020-17049 in Samba
  [SECURITY] 'Bronze bit' S4U2Proxy Constrained Delegation bypass in Samba with embedded Heimdal.");

  script_tag(name:"affected", value:"Samba versions prior to 4.13.13, 4.14.x prior to 4.14.9 and
  version 4.15.0.");

  script_tag(name:"solution", value:"Update to version 4.13.13, 4.14.9, 4.15.1 or later.");

  script_xref(name:"URL", value:"https://www.samba.org/samba/history/samba-4.13.13.html");
  script_xref(name:"URL", value:"https://www.samba.org/samba/history/samba-4.14.9.html");
  script_xref(name:"URL", value:"https://www.samba.org/samba/history/samba-4.15.1.html");
  script_xref(name:"URL", value:"https://bugzilla.samba.org/show_bug.cgi?id=14642");
  script_xref(name:"URL", value:"https://blog.netspi.com/cve-2020-17049-kerberos-bronze-bit-overview");
  script_xref(name:"URL", value:"https://blog.netspi.com/cve-2020-17049-kerberos-bronze-bit-theory");
  script_xref(name:"URL", value:"https://github.com/SecureAuthCorp/impacket/pull/1013");

  exit(0);
}

include("host_details.inc");
include("version_func.inc");

if (isnull(port = get_app_port(cpe: CPE)))
  exit(0);

if (!infos = get_app_version_and_location(cpe: CPE, port: port, exit_no_version: TRUE))
  exit(0);

version = infos["version"];
location = infos["location"];

if (version_is_less(version: version, test_version: "4.13.13")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "4.13.13", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

if (version =~ "^4\.14\." && version_is_less(version: version, test_version: "4.14.9")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "4.14.9", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

if (version == "4.15.0") {
  report = report_fixed_ver(installed_version: version, fixed_version: "4.15.1", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

exit(99);