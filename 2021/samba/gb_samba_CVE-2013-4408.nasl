# Copyright (C) 2021 Greenbone Networks GmbH
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-or-later
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

CPE = "cpe:/a:samba:samba";

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.150730");
  script_version("2021-10-05T13:40:29+0000");
  script_tag(name:"last_modification", value:"2021-10-05 13:40:29 +0000 (Tue, 05 Oct 2021)");
  script_tag(name:"creation_date", value:"2021-09-24 10:59:30 +0000 (Fri, 24 Sep 2021)");
  script_tag(name:"cvss_base", value:"8.3");
  script_tag(name:"cvss_base_vector", value:"AV:A/AC:L/Au:N/C:C/I:C/A:C");

  script_cve_id("CVE-2013-4408");

  script_tag(name:"qod_type", value:"remote_banner_unreliable");

  script_tag(name:"solution_type", value:"VendorFix");

  script_name("Samba >= 3.4.0 DoS Vulnerability (CVE-2013-4408)");

  script_category(ACT_GATHER_INFO);
  script_copyright("Copyright (C) 2021 Greenbone Networks GmbH");
  script_family("Denial of Service");
  script_dependencies("smb_nativelanman.nasl", "gb_samba_detect.nasl");
  script_mandatory_keys("samba/smb_or_ssh/detected");

  script_tag(name:"summary", value:"DCE-RPC fragment length field is incorrectly checked.");

  script_tag(name:"vuldetect", value:"Checks if a vulnerable version is present on the target host.");

  script_tag(name:"insight", value:"Samba versions 3.4.0 and above (versions 3.4.0 - 3.4.17, 3.5.0 -
  3.5.22, 3.6.0 - 3.6.21, 4.0.0 - 4.0.12 and including 4.1.2) are
  vulnerable to buffer overrun exploits in the client processing of
  DCE-RPC packets. This is due to incorrect checking of the DCE-RPC
  fragment length in the client code.

  This is a critical vulnerability as the DCE-RPC client code is part of
  the winbindd authentication and identity mapping daemon, which is
  commonly configured as part of many server installations (when joined
  to an Active Directory Domain). A malicious Active Directory Domain
  Controller or man-in-the-middle attacker impersonating an Active
  Directory Domain Controller could achieve root-level access by
  compromising the winbindd process.

  Samba server versions 3.4.0 - 3.4.17 and versions 3.5.0 - 3.5.22 are
  also vulnerable to a denial of service attack (server crash) due to a
  similar error in the server code of those versions.

  Samba server versions 3.6.0 and above (including all 3.6.x versions,
  all 4.0.x versions and 4.1.x) are not vulnerable to this problem.

  In addition range checks were missing on arguments returned from calls
  to the DCE-RPC functions LookupSids (lsa and samr), LookupNames (lsa and samr)
  and LookupRids (samr) which could also cause similar problems.

  As this was found during an internal audit of the Samba code there are
  no currently known exploits for this problem (as of December 9th 2013).");

  script_tag(name:"affected", value:"Samba versions 3.4.0 through 3.4.17, 3.5.0 through
  3.5.22, 3.6.0 through 3.6.21, 4.0.0 through 4.0.12 and including 4.1.2");

  script_tag(name:"solution", value:"Update to version 3.6.22, 4.0.13, 4.1.3 or later.");

  script_xref(name:"URL", value:"https://www.samba.org/samba/security/CVE-2013-4408.html");

  exit(0);
}

include("host_details.inc");
include("version_func.inc");

if (isnull(port = get_app_port(cpe: CPE)))
  exit(0);

if (!infos = get_app_version_and_location(cpe: CPE, port: port, exit_no_version: TRUE))
  exit(0);

version = infos["version"];
location = infos["location"];

if (version_in_range(version: version, test_version: "3.4.0", test_version2: "3.4.17")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "3.6.22", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

if (version_in_range(version: version, test_version: "3.5.0", test_version2: "3.5.22")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "3.6.22", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

if (version_in_range(version: version, test_version: "3.6.0", test_version2: "3.6.21")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "3.6.22", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

if (version_in_range(version: version, test_version: "4.0.0", test_version2: "4.0.12")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "4.0.13", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

if (version_in_range(version: version, test_version: "4.1.0", test_version2: "4.1.2")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "4.1.3", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

exit(99);
