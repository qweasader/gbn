# Copyright (C) 2021 Greenbone Networks GmbH
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-or-later
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

CPE = "cpe:/a:isc:bind";

if (description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.146629");
  script_version("2021-09-06T14:01:33+0000");
  script_tag(name:"last_modification", value:"2021-09-06 14:01:33 +0000 (Mon, 06 Sep 2021)");
  script_tag(name:"creation_date", value:"2021-09-06 08:41:05 +0000 (Mon, 06 Sep 2021)");
  script_tag(name:"cvss_base", value:"4.3");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:M/Au:N/C:N/I:N/A:P");
  script_tag(name:"severity_vector", value:"CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H");
  script_tag(name:"severity_origin", value:"NVD");
  script_tag(name:"severity_date", value:"2019-10-09 23:27:00 +0000 (Wed, 09 Oct 2019)");

  script_cve_id("CVE-2017-3140");

  script_tag(name:"qod_type", value:"remote_banner_unreliable");

  script_tag(name:"solution_type", value:"VendorFix");

  script_name("ISC BIND DoS Vulnerability (CVE-2017-3140) - Linux");

  script_category(ACT_GATHER_INFO);

  script_copyright("Copyright (C) 2021 Greenbone Networks GmbH");
  script_family("Denial of Service");
  script_dependencies("gb_isc_bind_consolidation.nasl", "os_detection.nasl");
  script_mandatory_keys("isc/bind/detected", "Host/runs_unixoide");

  script_tag(name:"summary", value:"ISC BIND is prone to a denial of service (DoS) vulnerability.");

  script_tag(name:"vuldetect", value:"Checks if a vulnerable version is present on the target host.");

  script_tag(name:"insight", value:"If named is configured to use Response Policy Zones (RPZ), an
  error processing some rule types can lead to a condition where BIND will endlessly loop while
  handling a query.");

  script_tag(name:"impact", value:"A server is potentially vulnerable to degradation of service if:

  - the server is configured to use RPZ,

  - the server uses NSDNAME or NSIP policy rules, and

  - an attacker can cause the server to process a specific query.

  Successful exploitation of this condition will cause named to enter a state where it continues to
  loop while processing the query without ever reaching an end state. While in this state, named
  repeatedly queries the same sets of authoritative nameservers, and this behavior will usually
  persist indefinitely beyond the normal client query processing timeout. By triggering this
  condition multiple times, an attacker could cause a deliberate and substantial degradation in
  service.");

  script_tag(name:"affected", value:"BIND 9.9.10, 9.10.5, 9.11.0 through 9.11.1, 9.9.10-S1 and
  9.10.5-S1.");

  script_tag(name:"solution", value:"Update to version 9.9.10-P1, 9.10.5-P1, 9.11.1-P1, 9.9.10-S2,
  9.10.5-S2 or later.");

  script_xref(name:"URL", value:"https://kb.isc.org/docs/aa-01495");

  exit(0);
}

include("host_details.inc");
include("version_func.inc");

if (isnull(port = get_app_port(cpe: CPE)))
  exit(0);

if (!infos = get_app_full(cpe: CPE, port: port, exit_no_version: TRUE))
  exit(0);

version = infos["version"];
proto = infos["proto"];
location = infos["location"];

if (version =~ "^9\.(9|10)\.[0-9]+s[0-9]") {
  if (version_is_equal(version: version, test_version: "9.9.10s1")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "9.9.10-S2", install_path: location);
    security_message(port: port, data: report, proto: proto);
    exit(0);
  }

  if (version_is_equal(version: version, test_version: "9.10.5-S1")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "9.10.5-S2", install_path: location);
    security_message(port: port, data: report, proto: proto);
    exit(0);
  }
} else {
  if (version_is_equal(version: version, test_version: "9.9.10")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "9.9.10-P1", install_path: location);
    security_message(port: port, data: report, proto: proto);
    exit(0);
  }

  if (version_is_equal(version: version, test_version: "9.10.5")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "9.10.5-P1", install_path: location);
    security_message(port: port, data: report, proto: proto);
    exit(0);
  }

  if (version_in_range(version: version, test_version: "9.11.0", test_version2: "9.11.1")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "9.11.1-P1", install_path: location);
    security_message(port: port, data: report, proto: proto);
    exit(0);
  }
}

exit(99);
