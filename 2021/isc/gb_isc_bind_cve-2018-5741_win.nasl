# Copyright (C) 2021 Greenbone Networks GmbH
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-or-later
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

CPE = "cpe:/a:isc:bind";

if (description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.146637");
  script_version("2021-09-06T14:01:33+0000");
  script_tag(name:"last_modification", value:"2021-09-06 14:01:33 +0000 (Mon, 06 Sep 2021)");
  script_tag(name:"creation_date", value:"2021-09-06 11:01:45 +0000 (Mon, 06 Sep 2021)");
  script_tag(name:"cvss_base", value:"4.0");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:S/C:N/I:P/A:N");
  script_tag(name:"severity_vector", value:"CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N");
  script_tag(name:"severity_origin", value:"NVD");
  script_tag(name:"severity_date", value:"2020-10-20 12:15:00 +0000 (Tue, 20 Oct 2020)");

  script_cve_id("CVE-2018-5741");

  script_tag(name:"qod_type", value:"remote_banner");

  script_tag(name:"solution_type", value:"VendorFix");

  script_name("ISC BIND Policies Vulnerability (CVE-2018-5741) - Windows");

  script_category(ACT_GATHER_INFO);

  script_copyright("Copyright (C) 2021 Greenbone Networks GmbH");
  script_family("General");
  script_dependencies("gb_isc_bind_consolidation.nasl", "os_detection.nasl");
  script_mandatory_keys("isc/bind/detected", "Host/runs_windows");

  script_tag(name:"summary", value:"ISC BIND is prone to an information disclosure vulnerability.");

  script_tag(name:"vuldetect", value:"Checks if a vulnerable version is present on the target host.");

  script_tag(name:"insight", value:"To provide fine-grained controls over the ability to use
  Dynamic DNS (DDNS) to update records in a zone, BIND 9 provides a feature called update-policy.
  Various rules can be configured to limit the types of updates that can be performed by a client,
  depending on the key used when sending the update request. Unfortunately, some rule types were
  not initially documented, and when documentation for them was added to the Administrator
  Reference Manual (ARM), the language that was added to the ARM at that time incorrectly described
  the behavior of two rule types, krb5-subdomain and ms-subdomain. This incorrect documentation
  could mislead operators into believing that policies they had configured were more restrictive
  than they actually were.");

  script_tag(name:"impact", value:"The krb5-subdomain and ms-subdomain update policy rule types
  permit updates from any client authenticated with a valid Kerberos or Windows machine principal
  from the REALM specified in the identity field, to modify records in the zone at or below the
  name specified in the name field. The incorrect documentation, however, indicated that the policy
  would be restricted to names at or below the machine's name as encoded in the Windows or Kerberos
  principal.");

  script_tag(name:"affected", value:"BIND version 9.x.");

  script_tag(name:"solution", value:"Update to version 9.11.5, 9.12.3 or later.");

  script_xref(name:"URL", value:"https://kb.isc.org/docs/cve-2018-5741");

  exit(0);
}

include("host_details.inc");
include("version_func.inc");

if (isnull(port = get_app_port(cpe: CPE)))
  exit(0);

if (!infos = get_app_full(cpe: CPE, port: port, exit_no_version: TRUE))
  exit(0);

version = infos["version"];
proto = infos["proto"];
location = infos["location"];

if (version =~ "^9\.") {
  if (version_is_less(version: version, test_version: "9.11.5")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "9.11.5", install_path: location);
    security_message(port: port, data: report, proto: proto);
    exit(0);
  }

  if (version_is_greater_equal(version: version, test_version: "9.12.0") &&
      version_is_less(version: version, test_version: "9.12.3")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "9.12.3", install_path: location);
    security_message(port: port, data: report, proto: proto);
    exit(0);
  }
}

exit(99);
