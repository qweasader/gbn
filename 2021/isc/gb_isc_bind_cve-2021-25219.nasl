# Copyright (C) 2021 Greenbone Networks GmbH
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-or-later
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

CPE = "cpe:/a:isc:bind";

if (description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.117759");
  script_version("2021-11-05T03:03:34+0000");
  script_tag(name:"last_modification", value:"2021-11-05 03:03:34 +0000 (Fri, 05 Nov 2021)");
  script_tag(name:"creation_date", value:"2021-10-28 13:17:59 +0000 (Thu, 28 Oct 2021)");
  script_tag(name:"cvss_base", value:"5.0");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:N/C:N/I:N/A:P");
  script_tag(name:"severity_vector", value:"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L");
  script_tag(name:"severity_origin", value:"NVD");
  script_tag(name:"severity_date", value:"2021-11-04 04:15:00 +0000 (Thu, 04 Nov 2021)");

  script_cve_id("CVE-2021-25219");

  script_tag(name:"qod_type", value:"remote_banner_unreliable"); # nb: See affected tag

  script_tag(name:"solution_type", value:"VendorFix");

  script_name("ISC BIND DoS Vulnerability (CVE-2021-25219)");

  script_category(ACT_GATHER_INFO);

  script_copyright("Copyright (C) 2021 Greenbone Networks GmbH");
  script_family("Denial of Service");
  script_dependencies("gb_isc_bind_consolidation.nasl");
  script_mandatory_keys("isc/bind/detected");

  script_tag(name:"summary", value:"ISC BIND is prone to a denial of service (DoS) vulnerability.");

  script_tag(name:"vuldetect", value:"Checks if a vulnerable version is present on the target host.");

  script_tag(name:"insight", value:"Exploitation of broken authoritative servers using a flaw in
  response processing can cause degradation in BIND resolver performance. The way the lame cache is
  currently designed makes it possible for its internal data structures to grow almost infinitely,
  which may cause significant delays in client query processing.");

  script_tag(name:"impact", value:"A successful attack exploiting this flaw causes a named resolver
  to spend most of its CPU time on managing and checking the lame cache. This results in client
  queries being responded to with large delays, and increased likelihood of DNS timeouts on client
  hosts.");

  script_tag(name:"affected", value:"BIND 9.3.0 through 9.11.35, 9.12.0 through 9.16.21, 9.9.3-S1
  through 9.11.35-S1, 9.16.8-S1 through 9.16.21-S1 and 9.17.0 through 9.17.18.

  Authoritative-only BIND 9 servers are not vulnerable to this flaw.");

  script_tag(name:"solution", value:"Update to version 9.11.36, 9.16.22, 9.17.19, 9.11.36-S1,
  9.16.22-S1 or later.");

  script_xref(name:"URL", value:"https://kb.isc.org/docs/cve-2021-25219");

  exit(0);
}

include("host_details.inc");
include("version_func.inc");

if (isnull(port = get_app_port(cpe: CPE)))
  exit(0);

if (!infos = get_app_full(cpe: CPE, port: port, exit_no_version: TRUE))
  exit(0);

version = infos["version"];
proto = infos["proto"];
location = infos["location"];

if (version =~ "^9\.[0-9]+\.[0-9]+s[0-9]") {
  if (version_in_range(version: version, test_version: "9.9.3s1", test_version2: "9.11.35s1")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "9.11.36-S1", install_path: location);
    security_message(port: port, data: report, proto: proto);
    exit(0);
  }

  if (version_in_range(version: version, test_version: "9.16.8s1", test_version2: "9.16.21s1")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "9.16.22-S1", install_path: location);
    security_message(port: port, data: report, proto: proto);
    exit(0);
  }
} else {
  if (version_in_range(version: version, test_version: "9.3.0", test_version2: "9.11.35")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "9.11.36", install_path: location);
    security_message(port: port, data: report, proto: proto);
    exit(0);
  }

  if (version_in_range(version: version, test_version: "9.12.0", test_version2: "9.16.21")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "9.16.22", install_path: location);
    security_message(port: port, data: report, proto: proto);
    exit(0);
  }

  if (version_in_range(version: version, test_version: "9.17.0", test_version2: "9.17.18")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "9.17.19", install_path: location);
    security_message(port: port, data: report, proto: proto);
    exit(0);
  }
}

exit(99);