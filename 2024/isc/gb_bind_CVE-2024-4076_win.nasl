# SPDX-FileCopyrightText: 2024 Greenbone AG
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-only

CPE = "cpe:/a:isc:bind";

if (description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.152745");
  script_version("2024-07-26T05:05:35+0000");
  script_tag(name:"last_modification", value:"2024-07-26 05:05:35 +0000 (Fri, 26 Jul 2024)");
  script_tag(name:"creation_date", value:"2024-07-24 02:57:45 +0000 (Wed, 24 Jul 2024)");
  script_tag(name:"cvss_base", value:"7.8");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:N/C:N/I:N/A:C");

  script_cve_id("CVE-2024-4076");

  script_tag(name:"qod_type", value:"remote_banner");

  script_tag(name:"solution_type", value:"VendorFix");

  script_name("ISC BIND DoS Vulnerability (CVE-2024-4076) - Windows");

  script_category(ACT_GATHER_INFO);

  script_copyright("Copyright (C) 2024 Greenbone AG");
  script_family("Denial of Service");
  script_dependencies("gb_isc_bind_consolidation.nasl", "os_detection.nasl");
  script_mandatory_keys("isc/bind/detected", "Host/runs_windows");

  script_tag(name:"summary", value:"ISC BIND is prone to a denial of service (DoS)
  vulnerability.");

  script_tag(name:"vuldetect", value:"Checks if a vulnerable version is present on the target host.");

  script_tag(name:"insight", value:"Client queries that trigger serving stale data and that also
  require lookups in local authoritative zone data may result in an assertion failure.");

  script_tag(name:"affected", value:"ISC BIND version 9.16.13 through 9.16.50, 9.18.0 through
  9.18.27, 9.19.0 through 9.19.24, 9.11.33-S1 through 9.11.37-S1, 9.16.13-S1 through 9.16.50-S1 and
  9.18.11-S1 through 9.18.27-S1.");

  script_tag(name:"solution", value:"Update to version 9.18.28, 9.20.0, 9.18.28-S1 or later.");

  script_xref(name:"URL", value:"https://kb.isc.org/docs/cve-2024-4076");
  script_xref(name:"URL", value:"https://www.cisa.gov/news-events/alerts/2024/07/24/isc-releases-security-advisories-bind-9");

  exit(0);
}

include("host_details.inc");
include("version_func.inc");

if (isnull(port = get_app_port(cpe: CPE)))
  exit(0);

if (!infos = get_app_full(cpe: CPE, port: port, exit_no_version: TRUE))
  exit(0);

version = infos["version"];
proto = infos["proto"];
location = infos["location"];

if (version =~ "^9\.[0-9]+\.[0-9]+s[0-9]") {
  if (version_in_range(version: version, test_version: "9.11.33s1", test_version2: "9.11.37s1") ||
      version_in_range(version: version, test_version: "9.16.13s1", test_version2: "9.16.50s1") ||
      version_in_range(version: version, test_version: "9.18.11s1", test_version2: "9.18.27s1")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "9.18.28-S1", install_path: location);
    security_message(port: port, data: report, proto: proto);
    exit(0);
  }
} else {
  if (version_in_range(version: version, test_version: "9.16.13", test_version2: "9.16.50") ||
      version_in_range(version: version, test_version: "9.18.0", test_version2: "9.18.27")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "9.18.28", install_path: location);
    security_message(port: port, data: report, proto: proto);
    exit(0);
  }

  if (version_in_range(version: version, test_version: "9.19.0", test_version2: "9.19.24")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "9.20.0", install_path: location);
    security_message(port: port, data: report, proto: proto);
    exit(0);
  }
}

exit(99);
