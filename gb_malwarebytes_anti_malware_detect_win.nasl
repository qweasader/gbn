# SPDX-FileCopyrightText: 2015 Greenbone AG
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-or-later

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.805401");
  script_version("2024-02-08T14:36:53+0000");
  script_tag(name:"cvss_base", value:"0.0");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:N/C:N/I:N/A:N");
  script_tag(name:"last_modification", value:"2024-02-08 14:36:53 +0000 (Thu, 08 Feb 2024)");
  script_tag(name:"creation_date", value:"2015-01-02 11:26:06 +0530 (Fri, 02 Jan 2015)");
  script_tag(name:"qod_type", value:"registry");
  script_name("Malwarebytes Anti-Malware Detection (Windows SMB Login)");

  script_tag(name:"summary", value:"Detects the installed version of
  Malwarebytes Anti-Malware.

  The script logs in via smb, searches for Malwarebytes Anti-Malware
  in the registry and gets the version from 'DisplayVersion' string
  from registry.");

  script_category(ACT_GATHER_INFO);
  script_copyright("Copyright (C) 2015 Greenbone AG");
  script_family("Product detection");
  script_dependencies("smb_reg_service_pack.nasl");
  script_mandatory_keys("SMB/WindowsVersion", "SMB/Windows/Arch");
  script_require_ports(139, 445);
  exit(0);
}

include("smb_nt.inc");
include("secpod_smb_func.inc");
include("cpe.inc");
include("host_details.inc");

os_arch = get_kb_item("SMB/Windows/Arch");
if(!os_arch){
  exit(0);
}

if("x86" >< os_arch){
  key_list = make_list("SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{35065F43-4BB2-439A-BFF7-0F1014F2E0CD}_is1");
}

else if("x64" >< os_arch)
{
  key_list =  make_list("SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{35065F43-4BB2-439A-BFF7-0F1014F2E0CD}_is1",
                        "SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\{35065F43-4BB2-439A-BFF7-0F1014F2E0CD}_is1");
}

if(isnull(key_list)){
  exit(0);
}

foreach key (key_list)
{
  if(registry_key_exists(key:key))
  {
    foreach item (registry_enum_keys(key:key))
    {
      mbName = registry_get_sz(key:key + item, item:"DisplayName");
      if("Malwarebytes" >< mbName)
      {
        mbVer = registry_get_sz(key:key + item, item:"DisplayVersion");
        mbPath = registry_get_sz(key:key + item, item:"InstallLocation");
        if(!mbPath) {
          mbPath = "Unable to find the install location from registry";
        }

        set_kb_item(name:"Malwarebytes/Anti-Malware/Win/Installed", value:TRUE);
        set_kb_item(name:"Malwarebytes/Anti-Malware/Win/Ver", value:mbVer);

        register_and_report_cpe( app:"Malwarebytes Anti-Malware", ver:mbVer, base:"cpe:/a:malwarebytes:malwarebytes_anti-malware:", expr:"^([0-9.]+)", insloc:mbPath );

        if("64" >< os_arch && "Wow6432Node" >!< key) {
          set_kb_item(name:"Malwarebytes/Anti-Malware64/Win/Ver", value:mbVer);
          register_and_report_cpe( app:"Malwarebytes Anti-Malware", ver:mbVer, base:"cpe:/a:malwarebytes:malwarebytes_anti-malware:x64:", expr:"^([0-9.]+)", insloc:mbPath );
        }
        exit( 0 );
      }
    }
  }
}
