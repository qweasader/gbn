# SPDX-FileCopyrightText: 2017 Greenbone AG
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-only

CPE = "cpe:/a:mautic:mautic";

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.108183");
  script_version("2024-10-22T05:05:39+0000");
  script_tag(name:"last_modification", value:"2024-10-22 05:05:39 +0000 (Tue, 22 Oct 2024)");
  script_tag(name:"creation_date", value:"2017-06-13 12:57:33 +0200 (Tue, 13 Jun 2017)");
  script_tag(name:"cvss_base", value:"6.8");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:M/Au:N/C:P/I:P/A:P");
  script_tag(name:"severity_vector", value:"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H");
  script_tag(name:"severity_origin", value:"NVD");
  script_tag(name:"severity_date", value:"2021-01-25 16:50:00 +0000 (Mon, 25 Jan 2021)");

  script_tag(name:"qod_type", value:"remote_banner");

  script_tag(name:"solution_type", value:"VendorFix");

  script_cve_id("CVE-2017-8874");

  script_name("Mautic <= 1.4.1 Multiple CSRF Vulnerabilities");

  script_category(ACT_GATHER_INFO);

  script_copyright("Copyright (C) 2017 Greenbone AG");
  script_family("Web application abuses");
  script_dependencies("gb_mautic_http_detect.nasl");
  script_mandatory_keys("mautic/detected");

  script_tag(name:"summary", value:"Mautic is prone to multiple cross-site request forgery (CSRF)
  vulnerabilities.");

  script_tag(name:"vuldetect", value:"Checks if a vulnerable version is present on the target host.");

  script_tag(name:"insight", value:"Mautic is prone to multiple CSRF vulnerabilities because it
  allows remote attackers to hijack the authentication of users for requests that (1) delete email
  campaigns or (2) delete contacts.");

  script_tag(name:"affected", value:"Mautic versions through 1.4.1.");

  script_tag(name:"solution", value:"Update to version 2.11.0 or later.");

  script_xref(name:"URL", value:"https://github.com/mautic/mautic/issues/3486");

  exit(0);
}

include("host_details.inc");
include("version_func.inc");

if (!port = get_app_port(cpe: CPE))
  exit(0);

if (!infos = get_app_version_and_location(cpe: CPE, port: port, exit_no_version: TRUE))
  exit(0);

version = infos["version"];
location = infos["location"];

if (version_is_less_equal(version: version, test_version: "1.4.1")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "2.11.0", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

exit(99);
