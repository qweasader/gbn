# Copyright (C) 2019 Greenbone Networks GmbH
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-or-later
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

CPE = "cpe:/a:samba:samba";

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.108693");
  script_version("2021-09-06T11:01:35+0000");
  script_tag(name:"last_modification", value:"2021-09-06 11:01:35 +0000 (Mon, 06 Sep 2021)");
  script_tag(name:"creation_date", value:"2019-10-30 13:40:29 +0000 (Wed, 30 Oct 2019)");
  script_tag(name:"cvss_base", value:"4.9");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:M/Au:S/C:P/I:P/A:N");
  script_tag(name:"severity_vector", value:"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N");
  script_tag(name:"severity_origin", value:"NVD");
  script_tag(name:"severity_date", value:"2021-05-29 13:15:00 +0000 (Sat, 29 May 2021)");

  script_cve_id("CVE-2019-14833");

  script_tag(name:"qod_type", value:"remote_banner_unreliable");

  script_tag(name:"solution_type", value:"VendorFix");

  script_name("Samba AD DC Check Password Script Weakness (CVE-2019-14833)");

  script_category(ACT_GATHER_INFO);

  script_copyright("Copyright (C) 2019 Greenbone Networks GmbH");
  script_family("General");
  script_dependencies("smb_nativelanman.nasl", "gb_samba_detect.nasl");
  script_mandatory_keys("samba/smb_or_ssh/detected");

  script_tag(name:"summary", value:"When the password contains multi-byte (non-ASCII) characters, the check password
  script of Samba AD DC does not receive the full password string.");

  script_tag(name:"vuldetect", value:"Checks if a vulnerable version is present on the target host.");

  script_tag(name:"insight", value:"Since Samba Version 4.5.0 a Samba AD DC can use a custom command to verify the
  password complexity. The command can be specified with the 'check password script' smb.conf parameter. This command
  is called when Samba handles a user password change or a new user password is set. The script receives the new
  cleartext password string in order to run custom password complexity checks like dictionary checks to avoid weak
  user passwords.

  When the password contains multi-byte (non-ASCII) characters, the check password script does not receive the full
  password string.");

  script_tag(name:"affected", value:"Samba 4.5.0 and later");

  script_tag(name:"solution", value:"Update to version 4.11.2, 4.10.10, 4.9.15 or later.");

  script_xref(name:"URL", value:"https://www.samba.org/samba/security/CVE-2019-14833.html");

  exit(0);
}

include("host_details.inc");
include("version_func.inc");

if (isnull(port = get_app_port(cpe: CPE)))
  exit(0);

if (!infos = get_app_version_and_location(cpe: CPE, port: port, exit_no_version: TRUE))
  exit(0);

version = infos['version'];
path = infos['location'];

if (version_in_range(version: version, test_version: "4.5.0", test_version2: "4.9.14")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "4.9.15", install_path: path);
  security_message(port: port, data: report);
  exit(0);
}

if (version_in_range(version: version, test_version: "4.10.0", test_version2: "4.10.9")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "4.10.10", install_path: path);
  security_message(port: port, data: report);
  exit(0);
}

if (version_in_range(version: version, test_version: "4.11.0", test_version2: "4.11.1")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "4.11.2", install_path: path);
  security_message(port: port, data: report);
  exit(0);
}

exit(99);
