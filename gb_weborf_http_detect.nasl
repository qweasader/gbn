# Copyright (C) 2010 Greenbone Networks GmbH
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-or-later
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.801223");
  script_version("2021-10-13T14:57:50+0000");
  script_tag(name:"last_modification", value:"2021-10-13 14:57:50 +0000 (Wed, 13 Oct 2021)");
  script_tag(name:"creation_date", value:"2010-06-11 14:27:58 +0200 (Fri, 11 Jun 2010)");
  script_tag(name:"cvss_base", value:"0.0");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:N/C:N/I:N/A:N");

  script_tag(name:"qod_type", value:"remote_banner");

  script_name("Weborf Detection (HTTP)");

  script_category(ACT_GATHER_INFO);

  script_copyright("Copyright (C) 2010 Greenbone Networks GmbH");
  script_family("Product detection");
  script_dependencies("gb_get_http_banner.nasl");
  script_mandatory_keys("Weborf/banner");
  script_require_ports("Services/www", 80);

  script_tag(name:"summary", value:"HTTP based detection of Weborf webserver.");

  script_xref(name:"URL", value:"https://ltworf.github.io/weborf/");

  exit(0);
}

include("cpe.inc");
include("host_details.inc");
include("http_func.inc");
include("http_keepalive.inc");
include("os_func.inc");
include("port_service_func.inc");

port = http_get_port(default:80);

banner = http_get_remote_headers(port:port);

if (egrep(pattern:"^Server\s*:\s*weborf", string:banner, icase:TRUE)) {
  version = "unknown";

  # Server: weborf/0.13.4 (GNU/Linux)
  # Server: weborf/0.17 (GNU/Linux)
  # Server: Weborf/
  vers = eregmatch(pattern:"[Ss]erver\s*:\s*[Ww]eborf/([0-9.]+)", string:banner);
  if (isnull(vers[1])) {
    url = "/non-existent" + rand() + ".html";
    req = http_get(port:port, item:url);
    res = http_keepalive_send_recv(port:port, data:req);

    # class="foot">weborf/0.13.4 (GNU/Linux)</div>
    # Generated by Weborf/
    vers = eregmatch(pattern:"[Ww]eborf/([0-9.]+)", string:res);
  }

  if (!isnull(vers[1])) {
    version = vers[1];
    if (url)
      concUrl = http_report_vuln_url(port:port, url:url, url_only:TRUE);
  }

  set_kb_item(name:"weborf/detected", value:TRUE);
  set_kb_item(name:"weborf/http/detected", value:TRUE);

  cpe = build_cpe(value:version, exp:"^([0-9.]+)", base:"cpe:/a:salvo_tomaselli:weborf_http_server:");
  if (!cpe)
    cpe = "cpe:/a:salvo_tomaselli:weborf_http_server";

  os_register_and_report(os:"Linux", cpe:"cpe:/o:linux:kernel", desc: "Weborf Detection (HTTP)",
                         runs_key:"unixoide");

  register_product(cpe:cpe, location:"/", port:port, service:"www");

  log_message(data: build_detection_report(app: "Weborf", version: version, install: "/", cpe: cpe,
                                           concluded: vers[0], concludedUrl: concUrl),
              port: port);
  exit(0);
}

exit(0);
