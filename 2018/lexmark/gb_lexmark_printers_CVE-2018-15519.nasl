# SPDX-FileCopyrightText: 2018 Greenbone AG
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-only

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.141644");
  script_version("2023-07-20T05:05:17+0000");
  script_tag(name:"last_modification", value:"2023-07-20 05:05:17 +0000 (Thu, 20 Jul 2023)");
  script_tag(name:"creation_date", value:"2018-11-05 12:28:20 +0700 (Mon, 05 Nov 2018)");
  script_tag(name:"cvss_base", value:"7.5");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:N/C:P/I:P/A:P");
  script_tag(name:"severity_vector", value:"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H");
  script_tag(name:"severity_origin", value:"NVD");
  script_tag(name:"severity_date", value:"2019-07-05 13:18:00 +0000 (Fri, 05 Jul 2019)");

  script_cve_id("CVE-2018-15519");

  script_tag(name:"qod_type", value:"remote_banner");

  script_tag(name:"solution_type", value:"VendorFix");

  script_name("Lexmark Printer Buffer Overflow Vulnerability (CVE-2018-15519)");

  script_category(ACT_GATHER_INFO);
  script_copyright("Copyright (C) 2018 Greenbone AG");
  script_family("General");
  script_dependencies("gb_lexmark_printer_consolidation.nasl");
  script_mandatory_keys("lexmark_printer/detected", "lexmark_printer/model");

  script_tag(name:"summary", value:"Multiple Lexmark printers are prone to a buffer overflow vulnerability.");

  script_tag(name:"vuldetect", value:"Checks if a vulnerable firmware version is present on the target host.");

  script_tag(name:"insight", value:"This vulnerability allows an attacker with crafted fax data to attack a
  Lexmark multifunction device.");

  script_tag(name:"impact", value:"The vulnerability allows a remote attacker to execute arbitrary code via
  crafted color fax data.");

  script_tag(name:"solution", value:"See the referenced vendor advisory for a solution.");

  script_xref(name:"URL", value:"http://support.lexmark.com/index?page=content&id=TE892");

  exit(0);
}

include("host_details.inc");
include("version_func.inc");

if (!model = get_kb_item("lexmark_printer/model"))
  exit(0);

cpe = 'cpe:/o:lexmark:' + tolower(model) + "_firmware";
if (!version = get_app_version(cpe: cpe, nofork: TRUE))
  exit(0);

if (model =~ "^CX310") {
  if (version_is_less(version: version, test_version: "lw70.gm2.p205")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "lw70.gm2.p205");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^CX410") {
  if (version_is_less(version: version, test_version: "lw70.gm4.p205")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "lw70.gm4.p205");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^(CX510|XC2132)") {
  if (version_is_less(version: version, test_version: "lw70.gm7.p205")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "lw70.gm7.p205");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^MX31") {
  if (version_is_less(version: version, test_version: "lw70.sb2.p205")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "lw70.sb2.p205");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^(MX41|MX51|XM1145)") {
  if (version_is_less(version: version, test_version: "lw70.sb4.p205")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "lw70.sb4.p205");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^(MX61|XM3150)") {
  if (version_is_less(version: version, test_version: "lw70.sb7.p205")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "lw70.sb7.p205");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^(MX71|MX81|XM51|XM71)") {
  if (version_is_less(version: version, test_version: "lw70.tu.p205")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "lw70.tu.p205");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^(MX91|XM91)") {
  if (version_is_less(version: version, test_version: "lw70.mg.p205")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "lw70.mg.p205");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^MX6500") {
  if (version_is_less(version: version, test_version: "lw70.jd.p205")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "lw70.jd.p205");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^X(S)?54") {
  if (version_is_less(version: version, test_version: "lhs60.vk.p672")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "lhs60.vk.p672");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^X(S)?74") {
  if (version_is_less(version: version, test_version: "lhs60.ny.p672")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "lhs60.ny.p672");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^X(S)?79") {
  if (version_is_less(version: version, test_version: "lhs60.mr.p672")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "lhs60.mr.p672");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^X(S)?92") {
  if (version_is_less(version: version, test_version: "lhs60.hk.p672")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "lhs60.hk.p672");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^X(S)?95") {
  if (version_is_less(version: version, test_version: "lhs60.tq.p672")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "lhs60.tq.p672");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^6500") {
  if (version_is_less(version: version, test_version: "lhs60.jr.p672")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "lhs60.jr.p672");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^X46") {
  if (version_is_less(version: version, test_version: "lr.bs.p804")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "lr.bs.p804");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^X65") {
  if (version_is_less(version: version, test_version: "lr.mn.p804")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "lr.mn.p804");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^X73") {
  if (version_is_less(version: version, test_version: "lr.fl.p804")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "lr.fl.p804");
    security_message(port: 0, data: report);
    exit(0);
  }
}
else if (model =~ "^X86") {
  if (version_is_less(version: version, test_version: "lp.sp.p804")) {
    report = report_fixed_ver(installed_version: version, fixed_version: "lp.sp.p804");
    security_message(port: 0, data: report);
    exit(0);
  }
}

exit(99);
