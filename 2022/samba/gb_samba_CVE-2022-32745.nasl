# Copyright (C) 2022 Greenbone Networks GmbH
# Some text descriptions might be excerpted from (a) referenced
# source(s), and are Copyright (C) by the respective right holder(s).
#
# SPDX-License-Identifier: GPL-2.0-or-later
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

CPE = "cpe:/a:samba:samba";

if(description)
{
  script_oid("1.3.6.1.4.1.25623.1.0.104258");
  script_version("2023-10-19T05:05:21+0000");
  script_tag(name:"last_modification", value:"2023-10-19 05:05:21 +0000 (Thu, 19 Oct 2023)");
  script_tag(name:"creation_date", value:"2022-07-28 07:34:46 +0000 (Thu, 28 Jul 2022)");
  script_tag(name:"cvss_base", value:"9.4");
  script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:N/C:C/I:N/A:C");
  script_tag(name:"severity_vector", value:"CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:H");
  script_tag(name:"severity_origin", value:"NVD");
  script_tag(name:"severity_date", value:"2022-08-29 18:11:00 +0000 (Mon, 29 Aug 2022)");

  script_cve_id("CVE-2022-32745");

  script_tag(name:"qod_type", value:"remote_banner_unreliable");

  script_tag(name:"solution_type", value:"VendorFix");

  script_name("Samba DoS Vulnerability (CVE-2022-32745)");

  script_category(ACT_GATHER_INFO);

  script_copyright("Copyright (C) 2022 Greenbone Networks GmbH");
  script_family("Denial of Service");
  script_dependencies("smb_nativelanman.nasl", "gb_samba_detect.nasl");
  script_mandatory_keys("samba/smb_or_ssh/detected");

  script_tag(name:"summary", value:"Samba is prone to a denial of service (DoS) vulnerability.");

  script_tag(name:"vuldetect", value:"Checks if a vulnerable version is present on the target host.");

  script_tag(name:"insight", value:"Due to incorrect values used as the limit for a loop and as the
  'count' parameter to memcpy(), the server, receiving a specially crafted message, leaves an array
  of structures partially uninitialised, or accesses an arbitrary element beyond the end of an
  array.

  Outcomes achievable by an attacker include segmentation faults and corresponding loss of
  availability. Depending on the contents of the uninitialised memory, confidentiality may also be
  affected.");

  script_tag(name:"affected", value:"Samba versions 4.13.x starting from 4.13.14, 4.14.x starting
  from 4.14.10 and prior to 4.14.14, 4.15.x starting from 4.15.2 and prior to 4.15.9, and 4.16.x
  prior to 4.16.4.");

  script_tag(name:"solution", value:"Update to version 4.14.14, 4.15.9, 4.16.4 or later.");

  script_xref(name:"URL", value:"https://www.samba.org/samba/security/CVE-2022-32745.html");

  exit(0);
}

include("host_details.inc");
include("version_func.inc");

if (isnull(port = get_app_port(cpe: CPE)))
  exit(0);

if (!infos = get_app_version_and_location(cpe: CPE, port: port, exit_no_version: TRUE))
  exit(0);

version = infos["version"];
location = infos["location"];

if (version_in_range_exclusive(version: version, test_version_lo: "4.13.14", test_version_up: "4.14.0")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "4.14.14 / 4.15.9 / 4.16.4", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

if (version_in_range_exclusive(version: version, test_version_lo: "4.14.10", test_version_up: "4.14.14")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "4.14.14 / 4.15.9 / 4.16.4", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

if (version_in_range_exclusive(version: version, test_version_lo: "4.15.2", test_version_up: "4.15.9")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "4.15.9 / 4.16.4", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

if (version_in_range_exclusive(version: version, test_version_lo: "4.16.0", test_version_up: "4.16.4")) {
  report = report_fixed_ver(installed_version: version, fixed_version: "4.16.4", install_path: location);
  security_message(port: port, data: report);
  exit(0);
}

exit(99);
